Team22:
Jinjun Liu    email: jliu788@gatech.edu
Zijian Xie    email: zxie86@gatech.edu
Hui Xia       email: hxia40@gatech.edu
Chen Zhang    email: czhang613@gatech.edu

Credit:
We used some codes and materials from GTOnline template.
The cartoon car on the logo image is from: http://www.sclance.com/pngs/car-cartoon-png/view-page-2.htm
Website icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY.




view_average_time_in_inventory_report.php include below SQL queries:

1. Query to generate the Average Time in Inventory Report. 

SELECT vehicletype.type_name AS AAA, IFNULL(otbl.average_time_in_inventory, 'N/A') AS BBB 
FROM vehicletype LEFT JOIN (
	SELECT Vehicle.type_name AS type_name, 
	ROUND(AVG(tbl.dateDiff),1) AS average_time_in_inventory 
	FROM (SELECT Sell.vin AS vin, DATEDIFF(Sell.sale_date, Buy.purchase_date) AS dateDiff 
		FROM Sell LEFT JOIN Buy ON Sell.vin = Buy.vin
		WHERE Buy.purchase_date IS NOT NULL AND Sell.sale_date IS NOT NULL)tbl 
	LEFT JOIN Vehicle ON Vehicle.vin = tbl.vin 
	GROUP BY Vehicle.type_name 
	ORDER BY Vehicle.type_name)otbl
ON vehicletype.type_name = otbl.type_name;


view_inventory_age_report.php include below SQL queries:

1. Query to generate the Inventory Age Report. 

SELECT VehicleType.type_name, IFNULL(avg_inventory_age,'N/A') AS avginventoryage,
IFNULL(max_inventory_age, 'N/A') AS maxinventoryage, IFNULL(min_inventory_age, 'N/A') AS mininventoryage
FROM VehicleType LEFT JOIN (
	SELECT Vehicle.type_name,
	ROUND(AVG(DATEDIFF(CURRENT_DATE, Buy.purchase_date)),1) AS avg_inventory_age,
	MAX(DATEDIFF(CURRENT_DATE, Buy.purchase_date)) AS max_inventory_age,
	MIN(DATEDIFF(CURRENT_DATE, Buy.purchase_date)) AS min_inventory_age
	FROM Vehicle LEFT OUTER JOIN Buy ON Vehicle.vin = Buy.vin
	RIGHT JOIN VehicleType ON Vehicle.type_name = VehicleType .type_name
	WHERE Vehicle.vin NOT IN (SELECT Sell .vin FROM Sell)
	GROUP BY Vehicle .type_name)tbl
ON VehicleType.type_name = tbl.type_name
ORDER BY tbl.type_name;


view_price_per_condition_report.php include below SQL queries:

1. Query to generate the Price per Condition Report. 

SELECT vehicle_type,
COALESCE(ROUND(AVG(CASE WHEN Vehicle_Condition = 'Excellent' THEN ROUND(Purchase_price,0) ELSE null END),1),0.0) As excellent,
COALESCE(ROUND(AVG(CASE WHEN Vehicle_Condition = 'Very Good' THEN Purchase_price ELSE null END),1),0.0) As very_good, 
COALESCE(ROUND(AVG(CASE WHEN Vehicle_Condition = 'Good' THEN Purchase_price ELSE null END),1),0.0) As good,
COALESCE(ROUND(AVG(CASE WHEN Vehicle_Condition = 'Fair' THEN Purchase_price ELSE null END),1),0.0) As fair
FROM (
	SELECT Vehicle .vin AS VIN, Vehicle .type_name AS vehicle_type,
	COALESCE(Buy.Purchase_price, 0) AS Purchase_price, Buy.purchase_condition AS Vehicle_Condition
	FROM Vehicle JOIN Buy ON Buy .vin = Vehicle .vin)Vehicle_Sales_Table
GROUP BY vehicle_type
ORDER BY vehicle_type;


view_repair_statistics_report.php include below SQL queries:

1. Query to generate the Repair Statistics Report. 

SELECT Repair.vendor_name, 
COUNT(Repair.vendor_name) AS num_of_repairs, 
SUM(Repair.repair_cost) AS total_repair_cost, 
ROUND(AVG(rep_ven.rep_times),1) AS avg_repair_per_vehicle, 
CEILING(AVG(DAY(Repair.end_date) - DAY(Repair.start_date))) AS avg_time_per_repair 
FROM Repair JOIN (
	SELECT Repair.vin, 
	Repair.vendor_name, 
	COUNT(*) AS rep_times 
	FROM Repair 
	GROUP BY Repair.vin,Repair.vendor_name )rep_ven 
ON Repair.vin = rep_ven.vin 
WHERE Repair.repair_status = 'completed' 
GROUP BY Repair.vendor_name 
ORDER BY Repair.vendor_name;


view_seller_history_report.php include below SQL queries:

1. Query to generate the Seller History Report. 

SELECT sellernames.name, 
COUNT(Buy .vin) AS total_vehicle_number_sold_to_us, 
ROUND(AVG(repaircounts.number_of_repair_for_this_vehicle),1) AS repairs_per_vehicle, 
ROUND(AVG(Buy.purchase_price),2) AS avg_purchase_price 
FROM Buy 
	LEFT OUTER JOIN ( 
	SELECT Buy.vin, 
	COUNT(repair.vin) as number_of_repair_for_this_vehicle 
	FROM Buy LEFT OUTER 
	JOIN Repair 
	ON Buy.vin = Repair.vin 
	GROUP BY Buy.vin)repaircounts 
ON Buy.vin = repaircounts.vin 
JOIN ( 
	SELECT customer_id, 
	CONCAT(customer_first_name, ' ', customer_last_name) AS name 
	FROM Person 
	UNION 
	SELECT customer_id, 
	business_name AS name 
	FROM Business)sellernames 
ON Buy.customer_id = sellernames.customer_id 
GROUP BY sellernames.name;


view_monthly_sales_report.php include below SQL queries:

1. Query to generate the Yearly Sales Report. 

SELECT
YEAR(Sell.sale_date) AS sale_year,
COUNT( Sell .vin) AS num_of_vehicle_sold,
SUM( Vehicle .sale_price) AS total_sale_income,
(SUM( Vehicle .sale_price)- SUM( Buy .purchase_price) - SUM(repairsum.totalrepaircost)) AS net_income
FROM Sell
JOIN Vehicle
ON Vehicle .vin = Sell .vin
JOIN Buy
ON Sell .vin = Buy .vin
JOIN (
	SELECT Repair.vin,
	SUM(Repair.repair_cost) AS totalrepaircost
	FROM Repair
	GROUP BY Repair.vin)repairsum
ON Sell .vin = repairsum.vin
GROUP BY Sale_year
ORDER BY Sale_year DESC;

2. Query to generate the Monthly Sales Report. 

SELECT
CONCAT(YEAR(Sell.sale_date), '-', MONTH(Sell.sale_date)) AS sale_month, 
COUNT( Sell .vin) AS num_of_vehicle_sold,
SUM( Vehicle .sale_price) AS total_sale_income,
(SUM( Vehicle .sale_price)- SUM( Buy .purchase_price) - SUM(repairsum.totalrepaircost)) AS net_income
FROM Sell
JOIN Vehicle
ON Vehicle .vin = Sell .vin
JOIN Buy
ON Sell .vin = Buy .vin
JOIN (
	SELECT Repair.vin,
	SUM(Repair.repair_cost) AS totalrepaircost
	FROM Repair
	GROUP BY Repair.vin)repairsum
ON Sell .vin = repairsum.vin
GROUP BY Sale_month
ORDER BY Sale_month DESC;


view_detailed_yearly_report.php include below SQL queries:

1. Query to generate the Detailed Yearly Sales Report. 

SELECT MAX(Users.login_first_name) AS top_seller_first_name, 
MAX(Users.login_last_name) AS top_seller_last_name, 
COUNT(Sell.vin) AS num_vehicle_sold, 
SUM(Vehicle.sale_price) AS total_sales 
FROM Sell 
JOIN Vehicle 
ON Vehicle.vin = Sell.vin 
JOIN Salesperson 
ON Sell.salesperson_permission = Salesperson.salesperson_permission 
JOIN Users 
ON Salesperson.username = Users.username 
WHERE YEAR(Sell.sale_date) = '{$_POST["yearly"]}' 
GROUP BY Salesperson.username 
ORDER BY num_vehicle_sold DESC, total_sales DESC ;


view_detailed_monthly_report.php include below SQL queries:

1. Query to generate the Detailed Monthly Sales Report. 

SELECT MAX(Users.login_first_name) AS top_seller_first_name, 
MAX(Users.login_last_name) AS top_seller_last_name, 
COUNT(Sell.vin) AS num_vehicle_sold, 
SUM(Vehicle.sale_price) AS total_sales 
FROM Sell 
JOIN Vehicle 
ON Vehicle.vin = Sell.vin 
JOIN Salesperson 
ON Sell.salesperson_permission = Salesperson.salesperson_permission 
JOIN Users 
ON Salesperson.username = Users.username 
WHERE CONCAT(YEAR(Sell.sale_date), '-', MONTH(Sell.sale_date)) = '{$_POST["monthly"]}'
GROUP BY Salesperson.username 
ORDER BY num_vehicle_sold DESC, total_sales DESC ;
